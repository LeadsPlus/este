Este - Google Closure based project boilerplate

What's that?
  It's my beloved development stack. Run one script, to compile Coffeescript,
  Stylus, Soy templates, update deps.js, run insanely fast unit tests, on file
  change (cmd-s). One console output, for all these wonderful tools. Tested on
  mac and win.

How to use it?
  Install Node.js, Java, Python.
  npm install -g coffee-script
  npm install -g mocha
  npm install -g stylus
    (todo: unglobalize, same as chai)
  Clone repository.
  Update Closure submodule.
    git submodule init
    git submodule update
      (todo: npm dev deps)
  Install Sublime Text, consider these packages:
      Package Control
      CoffeeScript
      Stylus
      SoyTemplate
      Clipboard History
      JsFormat
      Git - git commands for command palette
      SideBarGit - like Tortoise inside Sublimetext
  Type 'node run app' into console.
  Build something beautiful.

Ok. I got it, what's next?
  Take a look at the app. It defines structure, namespacing (by features ftw),
  how component uses templates, custom events, compilation into one Ã¼ber small
  file. This is just the beginning. TodoMVC (mobile version) is in process.
  In the meantime, see what este.mvc namespace contains yet.

este.mvc
  Model, collection, router.., todo: examples, docs, etc.

Namespaces
  Namespaces in assets/js. App is obvious, dev are development scripts, este
  is my personal everything-i-consider-as-reusable library. You, or your
  company, should maintain your own persisted-shared-wisdom library too.

Near future
  Github project page
  Demos
  TodoMVC (mobile version)
  localization
  validations
  two-way databinding

Change Log
  07/01/12
    [breaking]
      one script to rule them all!
        no 'node assets/js/dev/build app' endless typing anymore
        just 'node run app' ftw
        or..
        'node run app --deploy'
        'node run app --deploy --debug'
        see assets/js/dev/run.coffee docs
      
    [improvement]
      default este sublime project file

  06/30/12
    [improvement]
      start script
        refactored and speeded up, many bugs were fixed
        documentation
        onfilechange unit testing is faster
        debug option, detail time durations for each command 
        deps.js is defined for all assets/js subdirectories
    
    [breaking]
      start script
        needs project param, ex. node assets/js/dev/start app
    
    [fix]
      start script compiles xy-template.html files on start
    
    [improvement]
      faster *.coffee compilation (closure desp are async now)






